// source: seaweedfs/weed/pb/filer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.filer_pb.AssignVolumeRequest', null, global);
goog.exportSymbol('proto.filer_pb.AssignVolumeResponse', null, global);
goog.exportSymbol('proto.filer_pb.AtomicRenameEntryRequest', null, global);
goog.exportSymbol('proto.filer_pb.AtomicRenameEntryResponse', null, global);
goog.exportSymbol('proto.filer_pb.CreateEntryRequest', null, global);
goog.exportSymbol('proto.filer_pb.CreateEntryResponse', null, global);
goog.exportSymbol('proto.filer_pb.DeleteCollectionRequest', null, global);
goog.exportSymbol('proto.filer_pb.DeleteCollectionResponse', null, global);
goog.exportSymbol('proto.filer_pb.DeleteEntryRequest', null, global);
goog.exportSymbol('proto.filer_pb.DeleteEntryResponse', null, global);
goog.exportSymbol('proto.filer_pb.Entry', null, global);
goog.exportSymbol('proto.filer_pb.EventNotification', null, global);
goog.exportSymbol('proto.filer_pb.FileChunk', null, global);
goog.exportSymbol('proto.filer_pb.FileId', null, global);
goog.exportSymbol('proto.filer_pb.FullEntry', null, global);
goog.exportSymbol('proto.filer_pb.FuseAttributes', null, global);
goog.exportSymbol('proto.filer_pb.GetFilerConfigurationRequest', null, global);
goog.exportSymbol('proto.filer_pb.GetFilerConfigurationResponse', null, global);
goog.exportSymbol('proto.filer_pb.ListEntriesRequest', null, global);
goog.exportSymbol('proto.filer_pb.ListEntriesResponse', null, global);
goog.exportSymbol('proto.filer_pb.Location', null, global);
goog.exportSymbol('proto.filer_pb.Locations', null, global);
goog.exportSymbol('proto.filer_pb.LookupDirectoryEntryRequest', null, global);
goog.exportSymbol('proto.filer_pb.LookupDirectoryEntryResponse', null, global);
goog.exportSymbol('proto.filer_pb.LookupVolumeRequest', null, global);
goog.exportSymbol('proto.filer_pb.LookupVolumeResponse', null, global);
goog.exportSymbol('proto.filer_pb.StatisticsRequest', null, global);
goog.exportSymbol('proto.filer_pb.StatisticsResponse', null, global);
goog.exportSymbol('proto.filer_pb.UpdateEntryRequest', null, global);
goog.exportSymbol('proto.filer_pb.UpdateEntryResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.LookupDirectoryEntryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.filer_pb.LookupDirectoryEntryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.LookupDirectoryEntryRequest.displayName = 'proto.filer_pb.LookupDirectoryEntryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.LookupDirectoryEntryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.filer_pb.LookupDirectoryEntryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.LookupDirectoryEntryResponse.displayName = 'proto.filer_pb.LookupDirectoryEntryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.ListEntriesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.filer_pb.ListEntriesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.ListEntriesRequest.displayName = 'proto.filer_pb.ListEntriesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.ListEntriesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.filer_pb.ListEntriesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.ListEntriesResponse.displayName = 'proto.filer_pb.ListEntriesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.Entry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.filer_pb.Entry.repeatedFields_, null);
};
goog.inherits(proto.filer_pb.Entry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.Entry.displayName = 'proto.filer_pb.Entry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.FullEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.filer_pb.FullEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.FullEntry.displayName = 'proto.filer_pb.FullEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.EventNotification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.filer_pb.EventNotification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.EventNotification.displayName = 'proto.filer_pb.EventNotification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.FileChunk = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.filer_pb.FileChunk, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.FileChunk.displayName = 'proto.filer_pb.FileChunk';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.FileId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.filer_pb.FileId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.FileId.displayName = 'proto.filer_pb.FileId';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.FuseAttributes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.filer_pb.FuseAttributes.repeatedFields_, null);
};
goog.inherits(proto.filer_pb.FuseAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.FuseAttributes.displayName = 'proto.filer_pb.FuseAttributes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.CreateEntryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.filer_pb.CreateEntryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.CreateEntryRequest.displayName = 'proto.filer_pb.CreateEntryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.CreateEntryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.filer_pb.CreateEntryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.CreateEntryResponse.displayName = 'proto.filer_pb.CreateEntryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.UpdateEntryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.filer_pb.UpdateEntryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.UpdateEntryRequest.displayName = 'proto.filer_pb.UpdateEntryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.UpdateEntryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.filer_pb.UpdateEntryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.UpdateEntryResponse.displayName = 'proto.filer_pb.UpdateEntryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.DeleteEntryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.filer_pb.DeleteEntryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.DeleteEntryRequest.displayName = 'proto.filer_pb.DeleteEntryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.DeleteEntryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.filer_pb.DeleteEntryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.DeleteEntryResponse.displayName = 'proto.filer_pb.DeleteEntryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.AtomicRenameEntryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.filer_pb.AtomicRenameEntryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.AtomicRenameEntryRequest.displayName = 'proto.filer_pb.AtomicRenameEntryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.AtomicRenameEntryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.filer_pb.AtomicRenameEntryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.AtomicRenameEntryResponse.displayName = 'proto.filer_pb.AtomicRenameEntryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.AssignVolumeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.filer_pb.AssignVolumeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.AssignVolumeRequest.displayName = 'proto.filer_pb.AssignVolumeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.AssignVolumeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.filer_pb.AssignVolumeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.AssignVolumeResponse.displayName = 'proto.filer_pb.AssignVolumeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.LookupVolumeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.filer_pb.LookupVolumeRequest.repeatedFields_, null);
};
goog.inherits(proto.filer_pb.LookupVolumeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.LookupVolumeRequest.displayName = 'proto.filer_pb.LookupVolumeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.Locations = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.filer_pb.Locations.repeatedFields_, null);
};
goog.inherits(proto.filer_pb.Locations, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.Locations.displayName = 'proto.filer_pb.Locations';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.Location = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.filer_pb.Location, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.Location.displayName = 'proto.filer_pb.Location';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.LookupVolumeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.filer_pb.LookupVolumeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.LookupVolumeResponse.displayName = 'proto.filer_pb.LookupVolumeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.DeleteCollectionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.filer_pb.DeleteCollectionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.DeleteCollectionRequest.displayName = 'proto.filer_pb.DeleteCollectionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.DeleteCollectionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.filer_pb.DeleteCollectionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.DeleteCollectionResponse.displayName = 'proto.filer_pb.DeleteCollectionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.StatisticsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.filer_pb.StatisticsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.StatisticsRequest.displayName = 'proto.filer_pb.StatisticsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.StatisticsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.filer_pb.StatisticsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.StatisticsResponse.displayName = 'proto.filer_pb.StatisticsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.GetFilerConfigurationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.filer_pb.GetFilerConfigurationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.GetFilerConfigurationRequest.displayName = 'proto.filer_pb.GetFilerConfigurationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.filer_pb.GetFilerConfigurationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.filer_pb.GetFilerConfigurationResponse.repeatedFields_, null);
};
goog.inherits(proto.filer_pb.GetFilerConfigurationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.filer_pb.GetFilerConfigurationResponse.displayName = 'proto.filer_pb.GetFilerConfigurationResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.LookupDirectoryEntryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.LookupDirectoryEntryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.LookupDirectoryEntryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.LookupDirectoryEntryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    directory: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.LookupDirectoryEntryRequest}
 */
proto.filer_pb.LookupDirectoryEntryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.LookupDirectoryEntryRequest;
  return proto.filer_pb.LookupDirectoryEntryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.LookupDirectoryEntryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.LookupDirectoryEntryRequest}
 */
proto.filer_pb.LookupDirectoryEntryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirectory(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.LookupDirectoryEntryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.LookupDirectoryEntryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.LookupDirectoryEntryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.LookupDirectoryEntryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDirectory();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string directory = 1;
 * @return {string}
 */
proto.filer_pb.LookupDirectoryEntryRequest.prototype.getDirectory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.LookupDirectoryEntryRequest} returns this
 */
proto.filer_pb.LookupDirectoryEntryRequest.prototype.setDirectory = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.filer_pb.LookupDirectoryEntryRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.LookupDirectoryEntryRequest} returns this
 */
proto.filer_pb.LookupDirectoryEntryRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.LookupDirectoryEntryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.LookupDirectoryEntryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.LookupDirectoryEntryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.LookupDirectoryEntryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entry: (f = msg.getEntry()) && proto.filer_pb.Entry.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.LookupDirectoryEntryResponse}
 */
proto.filer_pb.LookupDirectoryEntryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.LookupDirectoryEntryResponse;
  return proto.filer_pb.LookupDirectoryEntryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.LookupDirectoryEntryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.LookupDirectoryEntryResponse}
 */
proto.filer_pb.LookupDirectoryEntryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.filer_pb.Entry;
      reader.readMessage(value,proto.filer_pb.Entry.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.LookupDirectoryEntryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.LookupDirectoryEntryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.LookupDirectoryEntryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.LookupDirectoryEntryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.filer_pb.Entry.serializeBinaryToWriter
    );
  }
};


/**
 * optional Entry entry = 1;
 * @return {?proto.filer_pb.Entry}
 */
proto.filer_pb.LookupDirectoryEntryResponse.prototype.getEntry = function() {
  return /** @type{?proto.filer_pb.Entry} */ (
    jspb.Message.getWrapperField(this, proto.filer_pb.Entry, 1));
};


/**
 * @param {?proto.filer_pb.Entry|undefined} value
 * @return {!proto.filer_pb.LookupDirectoryEntryResponse} returns this
*/
proto.filer_pb.LookupDirectoryEntryResponse.prototype.setEntry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.filer_pb.LookupDirectoryEntryResponse} returns this
 */
proto.filer_pb.LookupDirectoryEntryResponse.prototype.clearEntry = function() {
  return this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.filer_pb.LookupDirectoryEntryResponse.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.ListEntriesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.ListEntriesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.ListEntriesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.ListEntriesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    directory: jspb.Message.getFieldWithDefault(msg, 1, ""),
    prefix: jspb.Message.getFieldWithDefault(msg, 2, ""),
    startfromfilename: jspb.Message.getFieldWithDefault(msg, 3, ""),
    inclusivestartfrom: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    limit: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.ListEntriesRequest}
 */
proto.filer_pb.ListEntriesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.ListEntriesRequest;
  return proto.filer_pb.ListEntriesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.ListEntriesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.ListEntriesRequest}
 */
proto.filer_pb.ListEntriesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirectory(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrefix(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartfromfilename(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInclusivestartfrom(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.ListEntriesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.ListEntriesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.ListEntriesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.ListEntriesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDirectory();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPrefix();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStartfromfilename();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInclusivestartfrom();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional string directory = 1;
 * @return {string}
 */
proto.filer_pb.ListEntriesRequest.prototype.getDirectory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.ListEntriesRequest} returns this
 */
proto.filer_pb.ListEntriesRequest.prototype.setDirectory = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string prefix = 2;
 * @return {string}
 */
proto.filer_pb.ListEntriesRequest.prototype.getPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.ListEntriesRequest} returns this
 */
proto.filer_pb.ListEntriesRequest.prototype.setPrefix = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string startFromFileName = 3;
 * @return {string}
 */
proto.filer_pb.ListEntriesRequest.prototype.getStartfromfilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.ListEntriesRequest} returns this
 */
proto.filer_pb.ListEntriesRequest.prototype.setStartfromfilename = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool inclusiveStartFrom = 4;
 * @return {boolean}
 */
proto.filer_pb.ListEntriesRequest.prototype.getInclusivestartfrom = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.filer_pb.ListEntriesRequest} returns this
 */
proto.filer_pb.ListEntriesRequest.prototype.setInclusivestartfrom = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint32 limit = 5;
 * @return {number}
 */
proto.filer_pb.ListEntriesRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.filer_pb.ListEntriesRequest} returns this
 */
proto.filer_pb.ListEntriesRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.ListEntriesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.ListEntriesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.ListEntriesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.ListEntriesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entry: (f = msg.getEntry()) && proto.filer_pb.Entry.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.ListEntriesResponse}
 */
proto.filer_pb.ListEntriesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.ListEntriesResponse;
  return proto.filer_pb.ListEntriesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.ListEntriesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.ListEntriesResponse}
 */
proto.filer_pb.ListEntriesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.filer_pb.Entry;
      reader.readMessage(value,proto.filer_pb.Entry.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.ListEntriesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.ListEntriesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.ListEntriesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.ListEntriesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.filer_pb.Entry.serializeBinaryToWriter
    );
  }
};


/**
 * optional Entry entry = 1;
 * @return {?proto.filer_pb.Entry}
 */
proto.filer_pb.ListEntriesResponse.prototype.getEntry = function() {
  return /** @type{?proto.filer_pb.Entry} */ (
    jspb.Message.getWrapperField(this, proto.filer_pb.Entry, 1));
};


/**
 * @param {?proto.filer_pb.Entry|undefined} value
 * @return {!proto.filer_pb.ListEntriesResponse} returns this
*/
proto.filer_pb.ListEntriesResponse.prototype.setEntry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.filer_pb.ListEntriesResponse} returns this
 */
proto.filer_pb.ListEntriesResponse.prototype.clearEntry = function() {
  return this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.filer_pb.ListEntriesResponse.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.filer_pb.Entry.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.Entry.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.Entry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.Entry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.Entry.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isDirectory: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    chunksList: jspb.Message.toObjectList(msg.getChunksList(),
    proto.filer_pb.FileChunk.toObject, includeInstance),
    attributes: (f = msg.getAttributes()) && proto.filer_pb.FuseAttributes.toObject(includeInstance, f),
    extendedMap: (f = msg.getExtendedMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.Entry}
 */
proto.filer_pb.Entry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.Entry;
  return proto.filer_pb.Entry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.Entry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.Entry}
 */
proto.filer_pb.Entry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDirectory(value);
      break;
    case 3:
      var value = new proto.filer_pb.FileChunk;
      reader.readMessage(value,proto.filer_pb.FileChunk.deserializeBinaryFromReader);
      msg.addChunks(value);
      break;
    case 4:
      var value = new proto.filer_pb.FuseAttributes;
      reader.readMessage(value,proto.filer_pb.FuseAttributes.deserializeBinaryFromReader);
      msg.setAttributes(value);
      break;
    case 5:
      var value = msg.getExtendedMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.Entry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.Entry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.Entry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.Entry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsDirectory();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getChunksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.filer_pb.FileChunk.serializeBinaryToWriter
    );
  }
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.filer_pb.FuseAttributes.serializeBinaryToWriter
    );
  }
  f = message.getExtendedMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.filer_pb.Entry.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.Entry} returns this
 */
proto.filer_pb.Entry.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool is_directory = 2;
 * @return {boolean}
 */
proto.filer_pb.Entry.prototype.getIsDirectory = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.filer_pb.Entry} returns this
 */
proto.filer_pb.Entry.prototype.setIsDirectory = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * repeated FileChunk chunks = 3;
 * @return {!Array<!proto.filer_pb.FileChunk>}
 */
proto.filer_pb.Entry.prototype.getChunksList = function() {
  return /** @type{!Array<!proto.filer_pb.FileChunk>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.filer_pb.FileChunk, 3));
};


/**
 * @param {!Array<!proto.filer_pb.FileChunk>} value
 * @return {!proto.filer_pb.Entry} returns this
*/
proto.filer_pb.Entry.prototype.setChunksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.filer_pb.FileChunk=} opt_value
 * @param {number=} opt_index
 * @return {!proto.filer_pb.FileChunk}
 */
proto.filer_pb.Entry.prototype.addChunks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.filer_pb.FileChunk, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.filer_pb.Entry} returns this
 */
proto.filer_pb.Entry.prototype.clearChunksList = function() {
  return this.setChunksList([]);
};


/**
 * optional FuseAttributes attributes = 4;
 * @return {?proto.filer_pb.FuseAttributes}
 */
proto.filer_pb.Entry.prototype.getAttributes = function() {
  return /** @type{?proto.filer_pb.FuseAttributes} */ (
    jspb.Message.getWrapperField(this, proto.filer_pb.FuseAttributes, 4));
};


/**
 * @param {?proto.filer_pb.FuseAttributes|undefined} value
 * @return {!proto.filer_pb.Entry} returns this
*/
proto.filer_pb.Entry.prototype.setAttributes = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.filer_pb.Entry} returns this
 */
proto.filer_pb.Entry.prototype.clearAttributes = function() {
  return this.setAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.filer_pb.Entry.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * map<string, bytes> extended = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!(string|Uint8Array)>}
 */
proto.filer_pb.Entry.prototype.getExtendedMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.filer_pb.Entry} returns this
 */
proto.filer_pb.Entry.prototype.clearExtendedMap = function() {
  this.getExtendedMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.FullEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.FullEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.FullEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.FullEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    dir: jspb.Message.getFieldWithDefault(msg, 1, ""),
    entry: (f = msg.getEntry()) && proto.filer_pb.Entry.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.FullEntry}
 */
proto.filer_pb.FullEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.FullEntry;
  return proto.filer_pb.FullEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.FullEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.FullEntry}
 */
proto.filer_pb.FullEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDir(value);
      break;
    case 2:
      var value = new proto.filer_pb.Entry;
      reader.readMessage(value,proto.filer_pb.Entry.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.FullEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.FullEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.FullEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.FullEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDir();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.filer_pb.Entry.serializeBinaryToWriter
    );
  }
};


/**
 * optional string dir = 1;
 * @return {string}
 */
proto.filer_pb.FullEntry.prototype.getDir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.FullEntry} returns this
 */
proto.filer_pb.FullEntry.prototype.setDir = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Entry entry = 2;
 * @return {?proto.filer_pb.Entry}
 */
proto.filer_pb.FullEntry.prototype.getEntry = function() {
  return /** @type{?proto.filer_pb.Entry} */ (
    jspb.Message.getWrapperField(this, proto.filer_pb.Entry, 2));
};


/**
 * @param {?proto.filer_pb.Entry|undefined} value
 * @return {!proto.filer_pb.FullEntry} returns this
*/
proto.filer_pb.FullEntry.prototype.setEntry = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.filer_pb.FullEntry} returns this
 */
proto.filer_pb.FullEntry.prototype.clearEntry = function() {
  return this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.filer_pb.FullEntry.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.EventNotification.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.EventNotification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.EventNotification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.EventNotification.toObject = function(includeInstance, msg) {
  var f, obj = {
    oldEntry: (f = msg.getOldEntry()) && proto.filer_pb.Entry.toObject(includeInstance, f),
    newEntry: (f = msg.getNewEntry()) && proto.filer_pb.Entry.toObject(includeInstance, f),
    deleteChunks: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    newParentPath: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.EventNotification}
 */
proto.filer_pb.EventNotification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.EventNotification;
  return proto.filer_pb.EventNotification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.EventNotification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.EventNotification}
 */
proto.filer_pb.EventNotification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.filer_pb.Entry;
      reader.readMessage(value,proto.filer_pb.Entry.deserializeBinaryFromReader);
      msg.setOldEntry(value);
      break;
    case 2:
      var value = new proto.filer_pb.Entry;
      reader.readMessage(value,proto.filer_pb.Entry.deserializeBinaryFromReader);
      msg.setNewEntry(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeleteChunks(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewParentPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.EventNotification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.EventNotification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.EventNotification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.EventNotification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOldEntry();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.filer_pb.Entry.serializeBinaryToWriter
    );
  }
  f = message.getNewEntry();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.filer_pb.Entry.serializeBinaryToWriter
    );
  }
  f = message.getDeleteChunks();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getNewParentPath();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional Entry old_entry = 1;
 * @return {?proto.filer_pb.Entry}
 */
proto.filer_pb.EventNotification.prototype.getOldEntry = function() {
  return /** @type{?proto.filer_pb.Entry} */ (
    jspb.Message.getWrapperField(this, proto.filer_pb.Entry, 1));
};


/**
 * @param {?proto.filer_pb.Entry|undefined} value
 * @return {!proto.filer_pb.EventNotification} returns this
*/
proto.filer_pb.EventNotification.prototype.setOldEntry = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.filer_pb.EventNotification} returns this
 */
proto.filer_pb.EventNotification.prototype.clearOldEntry = function() {
  return this.setOldEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.filer_pb.EventNotification.prototype.hasOldEntry = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Entry new_entry = 2;
 * @return {?proto.filer_pb.Entry}
 */
proto.filer_pb.EventNotification.prototype.getNewEntry = function() {
  return /** @type{?proto.filer_pb.Entry} */ (
    jspb.Message.getWrapperField(this, proto.filer_pb.Entry, 2));
};


/**
 * @param {?proto.filer_pb.Entry|undefined} value
 * @return {!proto.filer_pb.EventNotification} returns this
*/
proto.filer_pb.EventNotification.prototype.setNewEntry = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.filer_pb.EventNotification} returns this
 */
proto.filer_pb.EventNotification.prototype.clearNewEntry = function() {
  return this.setNewEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.filer_pb.EventNotification.prototype.hasNewEntry = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool delete_chunks = 3;
 * @return {boolean}
 */
proto.filer_pb.EventNotification.prototype.getDeleteChunks = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.filer_pb.EventNotification} returns this
 */
proto.filer_pb.EventNotification.prototype.setDeleteChunks = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string new_parent_path = 4;
 * @return {string}
 */
proto.filer_pb.EventNotification.prototype.getNewParentPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.EventNotification} returns this
 */
proto.filer_pb.EventNotification.prototype.setNewParentPath = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.FileChunk.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.FileChunk.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.FileChunk} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.FileChunk.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    size: jspb.Message.getFieldWithDefault(msg, 3, 0),
    mtime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    eTag: jspb.Message.getFieldWithDefault(msg, 5, ""),
    sourceFileId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    fid: (f = msg.getFid()) && proto.filer_pb.FileId.toObject(includeInstance, f),
    sourceFid: (f = msg.getSourceFid()) && proto.filer_pb.FileId.toObject(includeInstance, f),
    cipherKey: msg.getCipherKey_asB64(),
    isGzipped: jspb.Message.getBooleanFieldWithDefault(msg, 10, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.FileChunk}
 */
proto.filer_pb.FileChunk.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.FileChunk;
  return proto.filer_pb.FileChunk.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.FileChunk} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.FileChunk}
 */
proto.filer_pb.FileChunk.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSize(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMtime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setETag(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceFileId(value);
      break;
    case 7:
      var value = new proto.filer_pb.FileId;
      reader.readMessage(value,proto.filer_pb.FileId.deserializeBinaryFromReader);
      msg.setFid(value);
      break;
    case 8:
      var value = new proto.filer_pb.FileId;
      reader.readMessage(value,proto.filer_pb.FileId.deserializeBinaryFromReader);
      msg.setSourceFid(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCipherKey(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsGzipped(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.FileChunk.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.FileChunk.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.FileChunk} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.FileChunk.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getMtime();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getETag();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSourceFileId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getFid();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.filer_pb.FileId.serializeBinaryToWriter
    );
  }
  f = message.getSourceFid();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.filer_pb.FileId.serializeBinaryToWriter
    );
  }
  f = message.getCipherKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      9,
      f
    );
  }
  f = message.getIsGzipped();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * optional string file_id = 1;
 * @return {string}
 */
proto.filer_pb.FileChunk.prototype.getFileId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.FileChunk} returns this
 */
proto.filer_pb.FileChunk.prototype.setFileId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.filer_pb.FileChunk.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.filer_pb.FileChunk} returns this
 */
proto.filer_pb.FileChunk.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 size = 3;
 * @return {number}
 */
proto.filer_pb.FileChunk.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.filer_pb.FileChunk} returns this
 */
proto.filer_pb.FileChunk.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 mtime = 4;
 * @return {number}
 */
proto.filer_pb.FileChunk.prototype.getMtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.filer_pb.FileChunk} returns this
 */
proto.filer_pb.FileChunk.prototype.setMtime = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string e_tag = 5;
 * @return {string}
 */
proto.filer_pb.FileChunk.prototype.getETag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.FileChunk} returns this
 */
proto.filer_pb.FileChunk.prototype.setETag = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string source_file_id = 6;
 * @return {string}
 */
proto.filer_pb.FileChunk.prototype.getSourceFileId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.FileChunk} returns this
 */
proto.filer_pb.FileChunk.prototype.setSourceFileId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional FileId fid = 7;
 * @return {?proto.filer_pb.FileId}
 */
proto.filer_pb.FileChunk.prototype.getFid = function() {
  return /** @type{?proto.filer_pb.FileId} */ (
    jspb.Message.getWrapperField(this, proto.filer_pb.FileId, 7));
};


/**
 * @param {?proto.filer_pb.FileId|undefined} value
 * @return {!proto.filer_pb.FileChunk} returns this
*/
proto.filer_pb.FileChunk.prototype.setFid = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.filer_pb.FileChunk} returns this
 */
proto.filer_pb.FileChunk.prototype.clearFid = function() {
  return this.setFid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.filer_pb.FileChunk.prototype.hasFid = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional FileId source_fid = 8;
 * @return {?proto.filer_pb.FileId}
 */
proto.filer_pb.FileChunk.prototype.getSourceFid = function() {
  return /** @type{?proto.filer_pb.FileId} */ (
    jspb.Message.getWrapperField(this, proto.filer_pb.FileId, 8));
};


/**
 * @param {?proto.filer_pb.FileId|undefined} value
 * @return {!proto.filer_pb.FileChunk} returns this
*/
proto.filer_pb.FileChunk.prototype.setSourceFid = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.filer_pb.FileChunk} returns this
 */
proto.filer_pb.FileChunk.prototype.clearSourceFid = function() {
  return this.setSourceFid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.filer_pb.FileChunk.prototype.hasSourceFid = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bytes cipher_key = 9;
 * @return {!(string|Uint8Array)}
 */
proto.filer_pb.FileChunk.prototype.getCipherKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes cipher_key = 9;
 * This is a type-conversion wrapper around `getCipherKey()`
 * @return {string}
 */
proto.filer_pb.FileChunk.prototype.getCipherKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCipherKey()));
};


/**
 * optional bytes cipher_key = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCipherKey()`
 * @return {!Uint8Array}
 */
proto.filer_pb.FileChunk.prototype.getCipherKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCipherKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.filer_pb.FileChunk} returns this
 */
proto.filer_pb.FileChunk.prototype.setCipherKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 9, value);
};


/**
 * optional bool is_gzipped = 10;
 * @return {boolean}
 */
proto.filer_pb.FileChunk.prototype.getIsGzipped = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.filer_pb.FileChunk} returns this
 */
proto.filer_pb.FileChunk.prototype.setIsGzipped = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.FileId.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.FileId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.FileId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.FileId.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    fileKey: jspb.Message.getFieldWithDefault(msg, 2, 0),
    cookie: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.FileId}
 */
proto.filer_pb.FileId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.FileId;
  return proto.filer_pb.FileId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.FileId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.FileId}
 */
proto.filer_pb.FileId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVolumeId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFileKey(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setCookie(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.FileId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.FileId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.FileId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.FileId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getFileKey();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getCookie();
  if (f !== 0) {
    writer.writeFixed32(
      3,
      f
    );
  }
};


/**
 * optional uint32 volume_id = 1;
 * @return {number}
 */
proto.filer_pb.FileId.prototype.getVolumeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.filer_pb.FileId} returns this
 */
proto.filer_pb.FileId.prototype.setVolumeId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 file_key = 2;
 * @return {number}
 */
proto.filer_pb.FileId.prototype.getFileKey = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.filer_pb.FileId} returns this
 */
proto.filer_pb.FileId.prototype.setFileKey = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional fixed32 cookie = 3;
 * @return {number}
 */
proto.filer_pb.FileId.prototype.getCookie = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.filer_pb.FileId} returns this
 */
proto.filer_pb.FileId.prototype.setCookie = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.filer_pb.FuseAttributes.repeatedFields_ = [12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.FuseAttributes.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.FuseAttributes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.FuseAttributes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.FuseAttributes.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    mtime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    fileMode: jspb.Message.getFieldWithDefault(msg, 3, 0),
    uid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    gid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    crtime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    mime: jspb.Message.getFieldWithDefault(msg, 7, ""),
    replication: jspb.Message.getFieldWithDefault(msg, 8, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 9, ""),
    ttlSec: jspb.Message.getFieldWithDefault(msg, 10, 0),
    userName: jspb.Message.getFieldWithDefault(msg, 11, ""),
    groupNameList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f,
    symlinkTarget: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.FuseAttributes}
 */
proto.filer_pb.FuseAttributes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.FuseAttributes;
  return proto.filer_pb.FuseAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.FuseAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.FuseAttributes}
 */
proto.filer_pb.FuseAttributes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFileSize(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMtime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFileMode(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGid(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCrtime(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setMime(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setReplication(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTtlSec(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.addGroupName(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymlinkTarget(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.FuseAttributes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.FuseAttributes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.FuseAttributes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.FuseAttributes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileSize();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getMtime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getFileMode();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getUid();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getGid();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getCrtime();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getMime();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getReplication();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getTtlSec();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getGroupNameList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      12,
      f
    );
  }
  f = message.getSymlinkTarget();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional uint64 file_size = 1;
 * @return {number}
 */
proto.filer_pb.FuseAttributes.prototype.getFileSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.filer_pb.FuseAttributes} returns this
 */
proto.filer_pb.FuseAttributes.prototype.setFileSize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 mtime = 2;
 * @return {number}
 */
proto.filer_pb.FuseAttributes.prototype.getMtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.filer_pb.FuseAttributes} returns this
 */
proto.filer_pb.FuseAttributes.prototype.setMtime = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 file_mode = 3;
 * @return {number}
 */
proto.filer_pb.FuseAttributes.prototype.getFileMode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.filer_pb.FuseAttributes} returns this
 */
proto.filer_pb.FuseAttributes.prototype.setFileMode = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 uid = 4;
 * @return {number}
 */
proto.filer_pb.FuseAttributes.prototype.getUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.filer_pb.FuseAttributes} returns this
 */
proto.filer_pb.FuseAttributes.prototype.setUid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 gid = 5;
 * @return {number}
 */
proto.filer_pb.FuseAttributes.prototype.getGid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.filer_pb.FuseAttributes} returns this
 */
proto.filer_pb.FuseAttributes.prototype.setGid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 crtime = 6;
 * @return {number}
 */
proto.filer_pb.FuseAttributes.prototype.getCrtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.filer_pb.FuseAttributes} returns this
 */
proto.filer_pb.FuseAttributes.prototype.setCrtime = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string mime = 7;
 * @return {string}
 */
proto.filer_pb.FuseAttributes.prototype.getMime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.FuseAttributes} returns this
 */
proto.filer_pb.FuseAttributes.prototype.setMime = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string replication = 8;
 * @return {string}
 */
proto.filer_pb.FuseAttributes.prototype.getReplication = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.FuseAttributes} returns this
 */
proto.filer_pb.FuseAttributes.prototype.setReplication = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string collection = 9;
 * @return {string}
 */
proto.filer_pb.FuseAttributes.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.FuseAttributes} returns this
 */
proto.filer_pb.FuseAttributes.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 ttl_sec = 10;
 * @return {number}
 */
proto.filer_pb.FuseAttributes.prototype.getTtlSec = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.filer_pb.FuseAttributes} returns this
 */
proto.filer_pb.FuseAttributes.prototype.setTtlSec = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string user_name = 11;
 * @return {string}
 */
proto.filer_pb.FuseAttributes.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.FuseAttributes} returns this
 */
proto.filer_pb.FuseAttributes.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * repeated string group_name = 12;
 * @return {!Array<string>}
 */
proto.filer_pb.FuseAttributes.prototype.getGroupNameList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.filer_pb.FuseAttributes} returns this
 */
proto.filer_pb.FuseAttributes.prototype.setGroupNameList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.filer_pb.FuseAttributes} returns this
 */
proto.filer_pb.FuseAttributes.prototype.addGroupName = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.filer_pb.FuseAttributes} returns this
 */
proto.filer_pb.FuseAttributes.prototype.clearGroupNameList = function() {
  return this.setGroupNameList([]);
};


/**
 * optional string symlink_target = 13;
 * @return {string}
 */
proto.filer_pb.FuseAttributes.prototype.getSymlinkTarget = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.FuseAttributes} returns this
 */
proto.filer_pb.FuseAttributes.prototype.setSymlinkTarget = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.CreateEntryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.CreateEntryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.CreateEntryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.CreateEntryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    directory: jspb.Message.getFieldWithDefault(msg, 1, ""),
    entry: (f = msg.getEntry()) && proto.filer_pb.Entry.toObject(includeInstance, f),
    oExcl: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.CreateEntryRequest}
 */
proto.filer_pb.CreateEntryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.CreateEntryRequest;
  return proto.filer_pb.CreateEntryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.CreateEntryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.CreateEntryRequest}
 */
proto.filer_pb.CreateEntryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirectory(value);
      break;
    case 2:
      var value = new proto.filer_pb.Entry;
      reader.readMessage(value,proto.filer_pb.Entry.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOExcl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.CreateEntryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.CreateEntryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.CreateEntryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.CreateEntryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDirectory();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.filer_pb.Entry.serializeBinaryToWriter
    );
  }
  f = message.getOExcl();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string directory = 1;
 * @return {string}
 */
proto.filer_pb.CreateEntryRequest.prototype.getDirectory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.CreateEntryRequest} returns this
 */
proto.filer_pb.CreateEntryRequest.prototype.setDirectory = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Entry entry = 2;
 * @return {?proto.filer_pb.Entry}
 */
proto.filer_pb.CreateEntryRequest.prototype.getEntry = function() {
  return /** @type{?proto.filer_pb.Entry} */ (
    jspb.Message.getWrapperField(this, proto.filer_pb.Entry, 2));
};


/**
 * @param {?proto.filer_pb.Entry|undefined} value
 * @return {!proto.filer_pb.CreateEntryRequest} returns this
*/
proto.filer_pb.CreateEntryRequest.prototype.setEntry = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.filer_pb.CreateEntryRequest} returns this
 */
proto.filer_pb.CreateEntryRequest.prototype.clearEntry = function() {
  return this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.filer_pb.CreateEntryRequest.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool o_excl = 3;
 * @return {boolean}
 */
proto.filer_pb.CreateEntryRequest.prototype.getOExcl = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.filer_pb.CreateEntryRequest} returns this
 */
proto.filer_pb.CreateEntryRequest.prototype.setOExcl = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.CreateEntryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.CreateEntryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.CreateEntryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.CreateEntryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.CreateEntryResponse}
 */
proto.filer_pb.CreateEntryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.CreateEntryResponse;
  return proto.filer_pb.CreateEntryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.CreateEntryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.CreateEntryResponse}
 */
proto.filer_pb.CreateEntryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.CreateEntryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.CreateEntryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.CreateEntryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.CreateEntryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string error = 1;
 * @return {string}
 */
proto.filer_pb.CreateEntryResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.CreateEntryResponse} returns this
 */
proto.filer_pb.CreateEntryResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.UpdateEntryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.UpdateEntryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.UpdateEntryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.UpdateEntryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    directory: jspb.Message.getFieldWithDefault(msg, 1, ""),
    entry: (f = msg.getEntry()) && proto.filer_pb.Entry.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.UpdateEntryRequest}
 */
proto.filer_pb.UpdateEntryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.UpdateEntryRequest;
  return proto.filer_pb.UpdateEntryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.UpdateEntryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.UpdateEntryRequest}
 */
proto.filer_pb.UpdateEntryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirectory(value);
      break;
    case 2:
      var value = new proto.filer_pb.Entry;
      reader.readMessage(value,proto.filer_pb.Entry.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.UpdateEntryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.UpdateEntryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.UpdateEntryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.UpdateEntryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDirectory();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.filer_pb.Entry.serializeBinaryToWriter
    );
  }
};


/**
 * optional string directory = 1;
 * @return {string}
 */
proto.filer_pb.UpdateEntryRequest.prototype.getDirectory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.UpdateEntryRequest} returns this
 */
proto.filer_pb.UpdateEntryRequest.prototype.setDirectory = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Entry entry = 2;
 * @return {?proto.filer_pb.Entry}
 */
proto.filer_pb.UpdateEntryRequest.prototype.getEntry = function() {
  return /** @type{?proto.filer_pb.Entry} */ (
    jspb.Message.getWrapperField(this, proto.filer_pb.Entry, 2));
};


/**
 * @param {?proto.filer_pb.Entry|undefined} value
 * @return {!proto.filer_pb.UpdateEntryRequest} returns this
*/
proto.filer_pb.UpdateEntryRequest.prototype.setEntry = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.filer_pb.UpdateEntryRequest} returns this
 */
proto.filer_pb.UpdateEntryRequest.prototype.clearEntry = function() {
  return this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.filer_pb.UpdateEntryRequest.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.UpdateEntryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.UpdateEntryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.UpdateEntryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.UpdateEntryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.UpdateEntryResponse}
 */
proto.filer_pb.UpdateEntryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.UpdateEntryResponse;
  return proto.filer_pb.UpdateEntryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.UpdateEntryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.UpdateEntryResponse}
 */
proto.filer_pb.UpdateEntryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.UpdateEntryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.UpdateEntryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.UpdateEntryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.UpdateEntryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.DeleteEntryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.DeleteEntryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.DeleteEntryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.DeleteEntryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    directory: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    isDeleteData: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    isRecursive: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    ignoreRecursiveError: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.DeleteEntryRequest}
 */
proto.filer_pb.DeleteEntryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.DeleteEntryRequest;
  return proto.filer_pb.DeleteEntryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.DeleteEntryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.DeleteEntryRequest}
 */
proto.filer_pb.DeleteEntryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirectory(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDeleteData(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRecursive(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnoreRecursiveError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.DeleteEntryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.DeleteEntryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.DeleteEntryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.DeleteEntryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDirectory();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsDeleteData();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getIsRecursive();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getIgnoreRecursiveError();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string directory = 1;
 * @return {string}
 */
proto.filer_pb.DeleteEntryRequest.prototype.getDirectory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.DeleteEntryRequest} returns this
 */
proto.filer_pb.DeleteEntryRequest.prototype.setDirectory = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.filer_pb.DeleteEntryRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.DeleteEntryRequest} returns this
 */
proto.filer_pb.DeleteEntryRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool is_delete_data = 4;
 * @return {boolean}
 */
proto.filer_pb.DeleteEntryRequest.prototype.getIsDeleteData = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.filer_pb.DeleteEntryRequest} returns this
 */
proto.filer_pb.DeleteEntryRequest.prototype.setIsDeleteData = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool is_recursive = 5;
 * @return {boolean}
 */
proto.filer_pb.DeleteEntryRequest.prototype.getIsRecursive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.filer_pb.DeleteEntryRequest} returns this
 */
proto.filer_pb.DeleteEntryRequest.prototype.setIsRecursive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool ignore_recursive_error = 6;
 * @return {boolean}
 */
proto.filer_pb.DeleteEntryRequest.prototype.getIgnoreRecursiveError = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.filer_pb.DeleteEntryRequest} returns this
 */
proto.filer_pb.DeleteEntryRequest.prototype.setIgnoreRecursiveError = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.DeleteEntryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.DeleteEntryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.DeleteEntryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.DeleteEntryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.DeleteEntryResponse}
 */
proto.filer_pb.DeleteEntryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.DeleteEntryResponse;
  return proto.filer_pb.DeleteEntryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.DeleteEntryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.DeleteEntryResponse}
 */
proto.filer_pb.DeleteEntryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.DeleteEntryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.DeleteEntryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.DeleteEntryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.DeleteEntryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string error = 1;
 * @return {string}
 */
proto.filer_pb.DeleteEntryResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.DeleteEntryResponse} returns this
 */
proto.filer_pb.DeleteEntryResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.AtomicRenameEntryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.AtomicRenameEntryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.AtomicRenameEntryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.AtomicRenameEntryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    oldDirectory: jspb.Message.getFieldWithDefault(msg, 1, ""),
    oldName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    newDirectory: jspb.Message.getFieldWithDefault(msg, 3, ""),
    newName: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.AtomicRenameEntryRequest}
 */
proto.filer_pb.AtomicRenameEntryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.AtomicRenameEntryRequest;
  return proto.filer_pb.AtomicRenameEntryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.AtomicRenameEntryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.AtomicRenameEntryRequest}
 */
proto.filer_pb.AtomicRenameEntryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOldDirectory(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOldName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewDirectory(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.AtomicRenameEntryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.AtomicRenameEntryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.AtomicRenameEntryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.AtomicRenameEntryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOldDirectory();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOldName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNewDirectory();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNewName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string old_directory = 1;
 * @return {string}
 */
proto.filer_pb.AtomicRenameEntryRequest.prototype.getOldDirectory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.AtomicRenameEntryRequest} returns this
 */
proto.filer_pb.AtomicRenameEntryRequest.prototype.setOldDirectory = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string old_name = 2;
 * @return {string}
 */
proto.filer_pb.AtomicRenameEntryRequest.prototype.getOldName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.AtomicRenameEntryRequest} returns this
 */
proto.filer_pb.AtomicRenameEntryRequest.prototype.setOldName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string new_directory = 3;
 * @return {string}
 */
proto.filer_pb.AtomicRenameEntryRequest.prototype.getNewDirectory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.AtomicRenameEntryRequest} returns this
 */
proto.filer_pb.AtomicRenameEntryRequest.prototype.setNewDirectory = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string new_name = 4;
 * @return {string}
 */
proto.filer_pb.AtomicRenameEntryRequest.prototype.getNewName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.AtomicRenameEntryRequest} returns this
 */
proto.filer_pb.AtomicRenameEntryRequest.prototype.setNewName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.AtomicRenameEntryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.AtomicRenameEntryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.AtomicRenameEntryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.AtomicRenameEntryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.AtomicRenameEntryResponse}
 */
proto.filer_pb.AtomicRenameEntryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.AtomicRenameEntryResponse;
  return proto.filer_pb.AtomicRenameEntryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.AtomicRenameEntryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.AtomicRenameEntryResponse}
 */
proto.filer_pb.AtomicRenameEntryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.AtomicRenameEntryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.AtomicRenameEntryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.AtomicRenameEntryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.AtomicRenameEntryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.AssignVolumeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.AssignVolumeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.AssignVolumeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.AssignVolumeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    replication: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ttlSec: jspb.Message.getFieldWithDefault(msg, 4, 0),
    dataCenter: jspb.Message.getFieldWithDefault(msg, 5, ""),
    parentPath: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.AssignVolumeRequest}
 */
proto.filer_pb.AssignVolumeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.AssignVolumeRequest;
  return proto.filer_pb.AssignVolumeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.AssignVolumeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.AssignVolumeRequest}
 */
proto.filer_pb.AssignVolumeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReplication(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTtlSec(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataCenter(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.AssignVolumeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.AssignVolumeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.AssignVolumeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.AssignVolumeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReplication();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTtlSec();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getDataCenter();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getParentPath();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional int32 count = 1;
 * @return {number}
 */
proto.filer_pb.AssignVolumeRequest.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.filer_pb.AssignVolumeRequest} returns this
 */
proto.filer_pb.AssignVolumeRequest.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.filer_pb.AssignVolumeRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.AssignVolumeRequest} returns this
 */
proto.filer_pb.AssignVolumeRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string replication = 3;
 * @return {string}
 */
proto.filer_pb.AssignVolumeRequest.prototype.getReplication = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.AssignVolumeRequest} returns this
 */
proto.filer_pb.AssignVolumeRequest.prototype.setReplication = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 ttl_sec = 4;
 * @return {number}
 */
proto.filer_pb.AssignVolumeRequest.prototype.getTtlSec = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.filer_pb.AssignVolumeRequest} returns this
 */
proto.filer_pb.AssignVolumeRequest.prototype.setTtlSec = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string data_center = 5;
 * @return {string}
 */
proto.filer_pb.AssignVolumeRequest.prototype.getDataCenter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.AssignVolumeRequest} returns this
 */
proto.filer_pb.AssignVolumeRequest.prototype.setDataCenter = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string parent_path = 6;
 * @return {string}
 */
proto.filer_pb.AssignVolumeRequest.prototype.getParentPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.AssignVolumeRequest} returns this
 */
proto.filer_pb.AssignVolumeRequest.prototype.setParentPath = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.AssignVolumeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.AssignVolumeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.AssignVolumeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.AssignVolumeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    url: jspb.Message.getFieldWithDefault(msg, 2, ""),
    publicUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    count: jspb.Message.getFieldWithDefault(msg, 4, 0),
    auth: jspb.Message.getFieldWithDefault(msg, 5, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 6, ""),
    replication: jspb.Message.getFieldWithDefault(msg, 7, ""),
    error: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.AssignVolumeResponse}
 */
proto.filer_pb.AssignVolumeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.AssignVolumeResponse;
  return proto.filer_pb.AssignVolumeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.AssignVolumeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.AssignVolumeResponse}
 */
proto.filer_pb.AssignVolumeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicUrl(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuth(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setReplication(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.AssignVolumeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.AssignVolumeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.AssignVolumeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.AssignVolumeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPublicUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getAuth();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getReplication();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string file_id = 1;
 * @return {string}
 */
proto.filer_pb.AssignVolumeResponse.prototype.getFileId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.AssignVolumeResponse} returns this
 */
proto.filer_pb.AssignVolumeResponse.prototype.setFileId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string url = 2;
 * @return {string}
 */
proto.filer_pb.AssignVolumeResponse.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.AssignVolumeResponse} returns this
 */
proto.filer_pb.AssignVolumeResponse.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string public_url = 3;
 * @return {string}
 */
proto.filer_pb.AssignVolumeResponse.prototype.getPublicUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.AssignVolumeResponse} returns this
 */
proto.filer_pb.AssignVolumeResponse.prototype.setPublicUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 count = 4;
 * @return {number}
 */
proto.filer_pb.AssignVolumeResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.filer_pb.AssignVolumeResponse} returns this
 */
proto.filer_pb.AssignVolumeResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string auth = 5;
 * @return {string}
 */
proto.filer_pb.AssignVolumeResponse.prototype.getAuth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.AssignVolumeResponse} returns this
 */
proto.filer_pb.AssignVolumeResponse.prototype.setAuth = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string collection = 6;
 * @return {string}
 */
proto.filer_pb.AssignVolumeResponse.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.AssignVolumeResponse} returns this
 */
proto.filer_pb.AssignVolumeResponse.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string replication = 7;
 * @return {string}
 */
proto.filer_pb.AssignVolumeResponse.prototype.getReplication = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.AssignVolumeResponse} returns this
 */
proto.filer_pb.AssignVolumeResponse.prototype.setReplication = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string error = 8;
 * @return {string}
 */
proto.filer_pb.AssignVolumeResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.AssignVolumeResponse} returns this
 */
proto.filer_pb.AssignVolumeResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.filer_pb.LookupVolumeRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.LookupVolumeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.LookupVolumeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.LookupVolumeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.LookupVolumeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    volumeIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.LookupVolumeRequest}
 */
proto.filer_pb.LookupVolumeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.LookupVolumeRequest;
  return proto.filer_pb.LookupVolumeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.LookupVolumeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.LookupVolumeRequest}
 */
proto.filer_pb.LookupVolumeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addVolumeIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.LookupVolumeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.LookupVolumeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.LookupVolumeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.LookupVolumeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVolumeIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string volume_ids = 1;
 * @return {!Array<string>}
 */
proto.filer_pb.LookupVolumeRequest.prototype.getVolumeIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.filer_pb.LookupVolumeRequest} returns this
 */
proto.filer_pb.LookupVolumeRequest.prototype.setVolumeIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.filer_pb.LookupVolumeRequest} returns this
 */
proto.filer_pb.LookupVolumeRequest.prototype.addVolumeIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.filer_pb.LookupVolumeRequest} returns this
 */
proto.filer_pb.LookupVolumeRequest.prototype.clearVolumeIdsList = function() {
  return this.setVolumeIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.filer_pb.Locations.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.Locations.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.Locations.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.Locations} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.Locations.toObject = function(includeInstance, msg) {
  var f, obj = {
    locationsList: jspb.Message.toObjectList(msg.getLocationsList(),
    proto.filer_pb.Location.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.Locations}
 */
proto.filer_pb.Locations.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.Locations;
  return proto.filer_pb.Locations.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.Locations} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.Locations}
 */
proto.filer_pb.Locations.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.filer_pb.Location;
      reader.readMessage(value,proto.filer_pb.Location.deserializeBinaryFromReader);
      msg.addLocations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.Locations.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.Locations.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.Locations} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.Locations.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.filer_pb.Location.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Location locations = 1;
 * @return {!Array<!proto.filer_pb.Location>}
 */
proto.filer_pb.Locations.prototype.getLocationsList = function() {
  return /** @type{!Array<!proto.filer_pb.Location>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.filer_pb.Location, 1));
};


/**
 * @param {!Array<!proto.filer_pb.Location>} value
 * @return {!proto.filer_pb.Locations} returns this
*/
proto.filer_pb.Locations.prototype.setLocationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.filer_pb.Location=} opt_value
 * @param {number=} opt_index
 * @return {!proto.filer_pb.Location}
 */
proto.filer_pb.Locations.prototype.addLocations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.filer_pb.Location, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.filer_pb.Locations} returns this
 */
proto.filer_pb.Locations.prototype.clearLocationsList = function() {
  return this.setLocationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.Location.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.Location.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.Location} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.Location.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, ""),
    publicUrl: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.Location}
 */
proto.filer_pb.Location.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.Location;
  return proto.filer_pb.Location.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.Location} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.Location}
 */
proto.filer_pb.Location.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.Location.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.Location.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.Location} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.Location.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPublicUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.filer_pb.Location.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.Location} returns this
 */
proto.filer_pb.Location.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string public_url = 2;
 * @return {string}
 */
proto.filer_pb.Location.prototype.getPublicUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.Location} returns this
 */
proto.filer_pb.Location.prototype.setPublicUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.LookupVolumeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.LookupVolumeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.LookupVolumeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.LookupVolumeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    locationsMapMap: (f = msg.getLocationsMapMap()) ? f.toObject(includeInstance, proto.filer_pb.Locations.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.LookupVolumeResponse}
 */
proto.filer_pb.LookupVolumeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.LookupVolumeResponse;
  return proto.filer_pb.LookupVolumeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.LookupVolumeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.LookupVolumeResponse}
 */
proto.filer_pb.LookupVolumeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getLocationsMapMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.filer_pb.Locations.deserializeBinaryFromReader, "", new proto.filer_pb.Locations());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.LookupVolumeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.LookupVolumeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.LookupVolumeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.LookupVolumeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocationsMapMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.filer_pb.Locations.serializeBinaryToWriter);
  }
};


/**
 * map<string, Locations> locations_map = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.filer_pb.Locations>}
 */
proto.filer_pb.LookupVolumeResponse.prototype.getLocationsMapMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.filer_pb.Locations>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.filer_pb.Locations));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.filer_pb.LookupVolumeResponse} returns this
 */
proto.filer_pb.LookupVolumeResponse.prototype.clearLocationsMapMap = function() {
  this.getLocationsMapMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.DeleteCollectionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.DeleteCollectionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.DeleteCollectionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.DeleteCollectionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    collection: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.DeleteCollectionRequest}
 */
proto.filer_pb.DeleteCollectionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.DeleteCollectionRequest;
  return proto.filer_pb.DeleteCollectionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.DeleteCollectionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.DeleteCollectionRequest}
 */
proto.filer_pb.DeleteCollectionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.DeleteCollectionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.DeleteCollectionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.DeleteCollectionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.DeleteCollectionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string collection = 1;
 * @return {string}
 */
proto.filer_pb.DeleteCollectionRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.DeleteCollectionRequest} returns this
 */
proto.filer_pb.DeleteCollectionRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.DeleteCollectionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.DeleteCollectionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.DeleteCollectionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.DeleteCollectionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.DeleteCollectionResponse}
 */
proto.filer_pb.DeleteCollectionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.DeleteCollectionResponse;
  return proto.filer_pb.DeleteCollectionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.DeleteCollectionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.DeleteCollectionResponse}
 */
proto.filer_pb.DeleteCollectionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.DeleteCollectionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.DeleteCollectionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.DeleteCollectionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.DeleteCollectionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.StatisticsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.StatisticsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.StatisticsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.StatisticsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    replication: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ttl: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.StatisticsRequest}
 */
proto.filer_pb.StatisticsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.StatisticsRequest;
  return proto.filer_pb.StatisticsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.StatisticsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.StatisticsRequest}
 */
proto.filer_pb.StatisticsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReplication(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTtl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.StatisticsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.StatisticsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.StatisticsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.StatisticsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReplication();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTtl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string replication = 1;
 * @return {string}
 */
proto.filer_pb.StatisticsRequest.prototype.getReplication = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.StatisticsRequest} returns this
 */
proto.filer_pb.StatisticsRequest.prototype.setReplication = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.filer_pb.StatisticsRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.StatisticsRequest} returns this
 */
proto.filer_pb.StatisticsRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ttl = 3;
 * @return {string}
 */
proto.filer_pb.StatisticsRequest.prototype.getTtl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.StatisticsRequest} returns this
 */
proto.filer_pb.StatisticsRequest.prototype.setTtl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.StatisticsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.StatisticsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.StatisticsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.StatisticsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    replication: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ttl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    totalSize: jspb.Message.getFieldWithDefault(msg, 4, 0),
    usedSize: jspb.Message.getFieldWithDefault(msg, 5, 0),
    fileCount: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.StatisticsResponse}
 */
proto.filer_pb.StatisticsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.StatisticsResponse;
  return proto.filer_pb.StatisticsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.StatisticsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.StatisticsResponse}
 */
proto.filer_pb.StatisticsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReplication(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTtl(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalSize(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUsedSize(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFileCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.StatisticsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.StatisticsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.StatisticsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.StatisticsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReplication();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTtl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTotalSize();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getUsedSize();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getFileCount();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
};


/**
 * optional string replication = 1;
 * @return {string}
 */
proto.filer_pb.StatisticsResponse.prototype.getReplication = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.StatisticsResponse} returns this
 */
proto.filer_pb.StatisticsResponse.prototype.setReplication = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.filer_pb.StatisticsResponse.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.StatisticsResponse} returns this
 */
proto.filer_pb.StatisticsResponse.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ttl = 3;
 * @return {string}
 */
proto.filer_pb.StatisticsResponse.prototype.getTtl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.StatisticsResponse} returns this
 */
proto.filer_pb.StatisticsResponse.prototype.setTtl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 total_size = 4;
 * @return {number}
 */
proto.filer_pb.StatisticsResponse.prototype.getTotalSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.filer_pb.StatisticsResponse} returns this
 */
proto.filer_pb.StatisticsResponse.prototype.setTotalSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 used_size = 5;
 * @return {number}
 */
proto.filer_pb.StatisticsResponse.prototype.getUsedSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.filer_pb.StatisticsResponse} returns this
 */
proto.filer_pb.StatisticsResponse.prototype.setUsedSize = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 file_count = 6;
 * @return {number}
 */
proto.filer_pb.StatisticsResponse.prototype.getFileCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.filer_pb.StatisticsResponse} returns this
 */
proto.filer_pb.StatisticsResponse.prototype.setFileCount = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.GetFilerConfigurationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.GetFilerConfigurationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.GetFilerConfigurationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.GetFilerConfigurationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.GetFilerConfigurationRequest}
 */
proto.filer_pb.GetFilerConfigurationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.GetFilerConfigurationRequest;
  return proto.filer_pb.GetFilerConfigurationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.GetFilerConfigurationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.GetFilerConfigurationRequest}
 */
proto.filer_pb.GetFilerConfigurationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.GetFilerConfigurationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.GetFilerConfigurationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.GetFilerConfigurationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.GetFilerConfigurationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.filer_pb.GetFilerConfigurationResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.filer_pb.GetFilerConfigurationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.filer_pb.GetFilerConfigurationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.filer_pb.GetFilerConfigurationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.GetFilerConfigurationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    mastersList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    replication: jspb.Message.getFieldWithDefault(msg, 2, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 3, ""),
    maxMb: jspb.Message.getFieldWithDefault(msg, 4, 0),
    dirBuckets: jspb.Message.getFieldWithDefault(msg, 5, ""),
    dirQueues: jspb.Message.getFieldWithDefault(msg, 6, ""),
    cipher: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.filer_pb.GetFilerConfigurationResponse}
 */
proto.filer_pb.GetFilerConfigurationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.filer_pb.GetFilerConfigurationResponse;
  return proto.filer_pb.GetFilerConfigurationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.filer_pb.GetFilerConfigurationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.filer_pb.GetFilerConfigurationResponse}
 */
proto.filer_pb.GetFilerConfigurationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addMasters(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReplication(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxMb(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirBuckets(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirQueues(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCipher(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.filer_pb.GetFilerConfigurationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.filer_pb.GetFilerConfigurationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.filer_pb.GetFilerConfigurationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.filer_pb.GetFilerConfigurationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMastersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getReplication();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMaxMb();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getDirBuckets();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDirQueues();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCipher();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * repeated string masters = 1;
 * @return {!Array<string>}
 */
proto.filer_pb.GetFilerConfigurationResponse.prototype.getMastersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.filer_pb.GetFilerConfigurationResponse} returns this
 */
proto.filer_pb.GetFilerConfigurationResponse.prototype.setMastersList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.filer_pb.GetFilerConfigurationResponse} returns this
 */
proto.filer_pb.GetFilerConfigurationResponse.prototype.addMasters = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.filer_pb.GetFilerConfigurationResponse} returns this
 */
proto.filer_pb.GetFilerConfigurationResponse.prototype.clearMastersList = function() {
  return this.setMastersList([]);
};


/**
 * optional string replication = 2;
 * @return {string}
 */
proto.filer_pb.GetFilerConfigurationResponse.prototype.getReplication = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.GetFilerConfigurationResponse} returns this
 */
proto.filer_pb.GetFilerConfigurationResponse.prototype.setReplication = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string collection = 3;
 * @return {string}
 */
proto.filer_pb.GetFilerConfigurationResponse.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.GetFilerConfigurationResponse} returns this
 */
proto.filer_pb.GetFilerConfigurationResponse.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 max_mb = 4;
 * @return {number}
 */
proto.filer_pb.GetFilerConfigurationResponse.prototype.getMaxMb = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.filer_pb.GetFilerConfigurationResponse} returns this
 */
proto.filer_pb.GetFilerConfigurationResponse.prototype.setMaxMb = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string dir_buckets = 5;
 * @return {string}
 */
proto.filer_pb.GetFilerConfigurationResponse.prototype.getDirBuckets = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.GetFilerConfigurationResponse} returns this
 */
proto.filer_pb.GetFilerConfigurationResponse.prototype.setDirBuckets = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string dir_queues = 6;
 * @return {string}
 */
proto.filer_pb.GetFilerConfigurationResponse.prototype.getDirQueues = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.filer_pb.GetFilerConfigurationResponse} returns this
 */
proto.filer_pb.GetFilerConfigurationResponse.prototype.setDirQueues = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool cipher = 7;
 * @return {boolean}
 */
proto.filer_pb.GetFilerConfigurationResponse.prototype.getCipher = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.filer_pb.GetFilerConfigurationResponse} returns this
 */
proto.filer_pb.GetFilerConfigurationResponse.prototype.setCipher = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


goog.object.extend(exports, proto.filer_pb);
